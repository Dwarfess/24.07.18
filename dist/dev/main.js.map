{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.less","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/clients/clients-routing.module.ts","webpack:///./src/app/clients/clients.component.html","webpack:///./src/app/clients/clients.component.less","webpack:///./src/app/clients/clients.component.ts","webpack:///./src/app/details/details.component.html","webpack:///./src/app/details/details.component.less","webpack:///./src/app/details/details.component.ts","webpack:///./src/app/material.ts","webpack:///./src/app/search/search.component.html","webpack:///./src/app/search/search.component.less","webpack:///./src/app/search/search.component.ts","webpack:///./src/app/services/broadcast.service.ts","webpack:///./src/app/services/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport {ClientsComponent} from './clients/clients.component';\n\nconst routes: Routes = [\n    {path: '', redirectTo: 'clients', pathMatch: 'full'},\n    {path: 'clients', component: ClientsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container\\\">\\n  <hr/>\\n\\n  <router-outlet></router-outlet>\\n</div>\"","module.exports = \".container {\\n  padding: 0 15px;\\n  margin: 0 auto;\\n  max-width: 1200px;\\n}\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule} from '@angular/forms';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {ClientsComponent} from './clients/clients.component';\nimport {DetailsComponent} from './details/details.component';\nimport {SearchComponent} from './search/search.component';\n\nimport {MaterialModule} from './material';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpService} from './services/http.service';\nimport {BroadcastService} from './services/broadcast.service';\nimport {ClientsRoutingModule} from './clients/clients-routing.module';\n\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ClientsComponent,\n        DetailsComponent,\n        SearchComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        MaterialModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        ClientsRoutingModule,\n        FormsModule\n    ],\n    providers: [HttpService, BroadcastService],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\n\r\nimport {ClientsComponent} from './clients.component';\r\nimport {DetailsComponent} from '../details/details.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild([\r\n            {path: '', redirectTo: '/clients', pathMatch: 'full'},\r\n            {\r\n                path: 'clients',\r\n                component: ClientsComponent,\r\n                children: [\r\n                    {\r\n                        path: ':name',\r\n                        component: DetailsComponent\r\n                    }\r\n                ]}\r\n        ])\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class ClientsRoutingModule { }\r\n","module.exports = \"<div class=\\\"list\\\">\\n  <app-search></app-search>\\n\\n  <mat-list>\\n    <mat-nav-list *ngFor=\\\"let client of clients\\\">\\n      <mat-list-item (click)=\\\"onSelect(client)\\\">\\n        <img matListAvatar src=\\\"{{client.general.avatar}}\\\" alt=\\\"...\\\">\\n        <h4 mat-line>{{client.general.firstName}} {{client.general.lastName}}</h4>\\n        <p mat-line>{{client.job.title}}</p>\\n      </mat-list-item>\\n      <mat-divider></mat-divider>\\n    </mat-nav-list>\\n\\n  </mat-list>\\n\\n</div>\\n\\n<div class=\\\"details\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\\n\\n\\n\"","module.exports = \".list {\\n  float: left;\\n  width: 32%;\\n  margin: 10px;\\n  padding: 10px;\\n  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\\n}\\n.list .mat-list {\\n  width: 99%;\\n  padding: 0;\\n  border: 1px solid #dbdbdb;\\n}\\n.list .mat-list .mat-nav-list {\\n  padding: 0 !important;\\n}\\n.list .mat-list .mat-list-item {\\n  height: 50px;\\n}\\n.details {\\n  float: left;\\n  width: 60% !important;\\n  margin: 10px;\\n}\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\n\nimport {HttpService} from '../services/http.service';\nimport {Client} from '../services/client';\nimport {BroadcastService} from '../services/broadcast.service';\n\n\n@Component({\n  selector: 'app-clients',\n  templateUrl: './clients.component.html',\n  styleUrls: ['./clients.component.less']\n})\nexport class ClientsComponent implements OnInit {\n    clients: Client[];\n\n    constructor(private service: HttpService, private router: Router, private broadcast: BroadcastService) {}\n\n    ngOnInit() {\n        this.getClients();\n\n        this.broadcast.subscriberToSearch()\n            .subscribe(res => this.clients = res);\n    }\n\n    // http get clients\n    public getClients() {\n        this.service.getClients()\n            .subscribe(data => this.clients = data);\n    }\n\n    //\n    onSelect(client) {\n        this.router.navigate(['/clients', (client.general.firstName) + (client.general.lastName)])\n            .then(response => response);\n    }\n}\n","module.exports = \"<mat-card class=\\\"example-card\\\">\\n\\n  <img mat-card-image src=\\\"{{client?.general.avatar}}\\\" alt=\\\"Photo of a Shiba Inu\\\">\\n  <div class=\\\"mat-card-details\\\">\\n    <mat-card-header>\\n      <mat-card-title>{{client?.general.firstName}} {{client?.general.lastName}}</mat-card-title>\\n      <mat-card-subtitle>{{client?.job.title}}</mat-card-subtitle>\\n      <mat-card-subtitle>({{client?.job.company}})</mat-card-subtitle>\\n    </mat-card-header>\\n    <mat-card-content>\\n\\n      <div class=\\\"address\\\">\\n        <h3>Address</h3>\\n        <hr>\\n        <span class = \\\"country\\\">{{client?.address.country}}, </span>\\n        <span>{{client?.address.city}}, </span>\\n        <span>{{client?.address.zipCode}}</span>\\n        <p>{{client?.address.street}}</p>\\n      </div>\\n\\n      <div class=\\\"contacts\\\">\\n        <p><mat-icon>phone</mat-icon><span>{{client?.contact.phone}}</span></p>\\n        <p><mat-icon>email</mat-icon><span>{{client?.contact.email}}</span></p>\\n      </div>\\n\\n    </mat-card-content>\\n  </div>\\n</mat-card>\\n\\n\"","module.exports = \".mat-card {\\n  padding: 10px;\\n}\\n.mat-card:after {\\n  content: \\\".\\\";\\n  display: block;\\n  height: 0;\\n  clear: both;\\n  visibility: hidden;\\n}\\n.mat-card .mat-card-image {\\n  float: left;\\n  width: 128px;\\n  margin: 0 !important;\\n}\\n.mat-card .mat-card-details {\\n  margin-left: 10px;\\n  float: left;\\n}\\n.mat-card .mat-card-details .mat-card-title {\\n  font-size: 30px;\\n}\\n.mat-card .mat-card-details .mat-card-content {\\n  padding: 0 10px;\\n}\\n.mat-card .mat-card-details .mat-card-content .address .country {\\n  font-weight: bold;\\n}\\n.mat-card .mat-card-details .mat-card-content .address p,\\n.mat-card .mat-card-details .mat-card-content .address span {\\n  margin: 5px 0;\\n  color: #747474;\\n}\\n.mat-card .mat-card-details .mat-card-content .address h3 {\\n  margin: 15px 0 0 0;\\n  font-weight: 200;\\n}\\n.mat-card .mat-card-details .mat-card-content .address hr {\\n  margin-top: 2px;\\n}\\n.mat-card .mat-card-details .mat-card-content .contacts {\\n  margin: 20px 0;\\n  color: #747474;\\n}\\n.mat-card .mat-card-details .mat-card-content .contacts .mat-icon {\\n  font-size: 16px;\\n}\\n.mat-card .mat-card-details .mat-card-content .contacts p {\\n  margin: 0;\\n}\\n/*my mixings*/\\n.after {\\n  content: \\\".\\\";\\n  display: block;\\n  height: 0;\\n  clear: both;\\n  visibility: hidden;\\n}\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Params} from '@angular/router';\n\nimport {Client} from '../services/client';\nimport {HttpService} from '../services/http.service';\n\n@Component({\n    selector: 'app-details',\n    templateUrl: './details.component.html',\n    styleUrls: ['./details.component.less']\n})\nexport class DetailsComponent implements OnInit {\n    client: Client;\n\n    constructor(private service: HttpService, private activatedRoute: ActivatedRoute) {}\n\n    ngOnInit() {\n      // checks url params for define client\n        this.activatedRoute.params.forEach((params: Params) => {\n            let name = params['name']; // get client id(name)\n\n            // http gets all of the clients and find  the client\n            this.service.getClients()\n                .subscribe(data => {\n                    this.client = data.find(x => (x.general.firstName) + (x.general.lastName) === name);\n                });\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\r\n\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\n\r\n@NgModule({\r\n    imports: [\r\n        MatListModule,\r\n        MatCardModule,\r\n        MatIconModule,\r\n        MatInputModule\r\n    ],\r\n    exports: [\r\n        MatListModule,\r\n        MatCardModule,\r\n        MatIconModule,\r\n        MatInputModule\r\n    ],\r\n})\r\nexport class MaterialModule {}\r\n","module.exports = \"<mat-form-field class=\\\"example-full-width\\\">\\n  <input matInput placeholder=\\\"Search\\\" [(ngModel)]=\\\"text\\\" name=\\\"first\\\" (keyup) = \\\"searchClient()\\\">\\n</mat-form-field>\\n\"","module.exports = \".mat-form-field {\\n  width: 99%;\\n}\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport {BroadcastService} from '../services/broadcast.service';\nimport {Client} from '../services/client';\nimport {HttpService} from '../services/http.service';\n\n@Component({\n    selector: 'app-search',\n    templateUrl: './search.component.html',\n    styleUrls: ['./search.component.less']\n})\nexport class SearchComponent implements OnInit {\n    text: any;\n    clients: Client[];\n\n    constructor(private service: HttpService, private broadcastService: BroadcastService) {}\n\n    ngOnInit() {\n        // http get clients\n        this.service.getClients()\n            .subscribe(data => this.clients = data);\n    }\n\n    // looking for a similar value in all the properties of the objects\n    searchClient() {\n        let clientList = this.clients.filter((x) => {\n            for (let key of Object.keys(x)) {\n                if (x[key] instanceof Object) {\n                    for (let subkey of Object.keys(x[key])) {\n                        if (x[key][subkey].toLowerCase().includes(this.text.toLowerCase())) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        });\n\n        // sending new list of clients after search\n        this.broadcastService.searchClients(clientList);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BroadcastService {\n    private searchEvent = new EventEmitter();\n\n    // set new client list after search\n    searchClients(data) {\n        this.searchEvent.emit(data);\n    }\n\n    // subscriber watches any changes\n    subscriberToSearch() {\n        return this.searchEvent;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Client } from './client';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HttpService {\n    public url = `/assets/data/clients.json`;\n\n    constructor(private http: HttpClient) {}\n\n    // http get any game\n    public getClients(): Observable<Client[]> {\n        return this.http.get<Client[]>(this.url);\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}